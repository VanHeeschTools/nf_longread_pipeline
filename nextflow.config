params {
// ─── REQUIRED INPUTS ─────────────────────────────────────────────
    input                = null   // Path to directory with FASTQ files or subfolders
    sample               = null   // Optional: single sample name
    sample_sheet         = null   // CSV with sample metadata

    // ─── OUTPUT CONFIGURATION ───────────────────────────────────────
    outdir               = "results" // Output folder
    output_prefix        = "output"  // Prefix for output files

    // ─── REFERENCE FILES ────────────────────────────────────────────
    reference_genome     = null  // Required for alignment
    reference_gtf        = null // Required GTF for assembly
    masked_fasta         = null // Optional masked genome
    transcriptome_fasta  = null // Optional cDNA/transcriptome FASTA
    refseq_gtf           = null // Optional RefSeq xr/nr annotation

    // ─── MODULE TOGGLES ─────────────────────────────────────────────
    qc                   = true  // Enable QC (NanoPlot, etc.)
    assembly             = true  // Enable transcriptome assembly
    expression           = true  // Enable quantification (e.g. Salmon)

    // ─── NANOPLOT OPTIONS ──────────────────────────────────────────
    nanoplot_extra_opts = ""       // Additional opts

    // ─── PYCHOPPER OPTIONS ──────────────────────────────────────────
    cdna_kit             = "PCB114" // See Pychopper docs for accepted kits
    custom_primers_file  = null     // FASTA with custom primers
    pychopper_backend    = "edlib"  // edlib or phmm
    pychopper_extra_opts = ""       // Additional opts
    store_full_length_reads = true  // Save full-length reads after trimming

    // ─── ALIGNMENT OPTIONS ──────────────────────────────────────────
    minimap_extra_opts            = ""  // Minimap alignment opts
    minimap_index_extra_opts      = ""  // Minimap indexing opts
    minimap_transcripts_extra_opts = "" // Optional alignment to transcriptome

    // ─── STRINGTIE OPTIONS ──────────────────────────────────────────
    stringtie_extra_opts = ""  // Additional StringTie options

    // ─── FILTERING / ANNOTATION ─────────────────────────────────────
    min_tpm             = 0.1 // Min TPM to retain transcripts
    min_occurrence      = 1   // Min number of samples present

    // ─── SALMON OPTIONS ─────────────────────────────────────────────
    salmon_extra_opts   = "--ont"  // Salmon-specific flags (e.g. --seqBias)

    // ─── MULTIQC CONFIG ─────────────────────────────────────────────
    multiqc_config      = "${projectDir}/assets/multiqc_config.yml"

    // ─── CONTAINER DIRECTORY (Optional override for process-specific images) ─
    container_folder    = null   // Folder where singularity containers are stored
}

executor {
    $slurm {
        queueSize = 30
        pollInterval = '30sec'
        queueStatInterval = '1min'
    }
}

env {
    PYTHONPATH = "$projectDir/bin:$PYTHONPATH"
}

// Define profiles
profiles {
    local {
        process {
            executor = 'local'
            cpus   = 2
            memory = '10.GB'
            time   = '1.h'
        }
    }

    slurm {
        process.executor = 'slurm'
        process.shell = ['/bin/bash', '-euo', 'pipefail']

    }
}

// Include base config
includeConfig 'configs/base.config'

timeline {
    enabled = true
    overwrite = true
    file = "execution_info/execution_timeline.html"
}
report {
    enabled = true
    overwrite = true
    file = "execution_info/execution_report.html"
}
trace {
    enabled = true
    overwrite = true
    file = "execution_info/execution_trace.txt"
}
dag {
    enabled = true
    overwrite = true
    file = "execution_info/pipeline_dag.svg"
}